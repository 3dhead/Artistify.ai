{"version":3,"sources":["components/AppBar/AppBar.js","components/StyleTransferApp/CustomSlider/CustomSlider.js","components/StyleTransferApp/ImageSelector/ContentImageSelector.js","components/StyleTransferApp/ImageSelector/StyleImageSelector.js","tensorflowjs/StyleTransferModel.js","components/StyleTransferApp/index.js","components/Footer/Footer.js","components/Home/HomeLite.js","components/Home/HomePro.js","components/ModeChooser/ModeChooser.js","App.js","index.js","components/AppBar/logotext.svg","components/ModeChooser/Logo.png"],"names":["useStyles","makeStyles","theme","root","flexGrow","title","textAlign","verticalAlign","Transition","React","forwardRef","props","ref","Slide","direction","classes","useState","open","setOpen","handleClose","className","AppBar","position","Toolbar","src","LogoText","height","alt","Tooltip","IconButton","aria-label","aria-controls","color","href","rel","target","style","textDecoration","onClick","Dialog","fullScreen","onClose","TransitionComponent","Typography","variant","edge","fontSize","gutterBottom","CustomSlider","withStyles","palette","secondary","light","thumb","width","marginTop","marginLeft","active","valueLabel","left","track","type","borderRadius","rail","Slider","onChange","sliderChangeHandler","value","ContentImageSelector","componentWillUnmount","onModalCanceled","onFileChange","evt","file","files","fileReader","FileReader","onload","e","console","log","result","setState","imageSrc","image","readAsDataURL","handleMenu","event","modalOpen","navigator","getUserMedia","video","stream","cameraFeed","cameraRef","current","srcObject","play","err","error","uploadRef","click","getTracks","stop","onCameraCaptureClicked","canvasContext","canvasRef","getContext","drawImage","imageDataURL","toDataURL","onSliderValueChange","newValue","imgHeight","handlePopoverOpen","anchorEl","currentTarget","handlePopoverClose","state","menulist","name","createRef","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","this","display","id","accept","refObject","formControl","marginBottom","marginRight","aria-owns","undefined","aria-haspopup","onMouseEnter","onMouseLeave","Popover","popover","paper","anchorOrigin","vertical","horizontal","transformOrigin","disableRestoreFocus","maxWidth","min","max","step","disabled","isDisabled","FormControl","InputLabel","Select","labelId","label","map","option","MenuItem","key","keepMounted","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","Button","Component","margin","spacing","pointerEvents","padding","StyleImageSelector","tf","set","StyleTransferModel","path_style_network","path_transformer_network","onDownloadSuccessful","onDownloadFailed","Promise","all","loadModelFromPath","then","styleNet","transformerNet","styleNetwork","transformerNetwork","catch","path_to_model","contentRef","styleRef","outputRef","style_ratio","onImageGenerated","onError","predict","fromPixels","toFloat","div","expandDims","features","content_features","style_features","styleFeaturesScaled","mul","contentFeaturesScaled","addStrict","dispose","squeeze","stylizedImage","toPixels","StyleTransferApp","strength","onBeginStylization","resetAndBegin","refreshPage","window","location","reload","contentSrc","loading","stepper","styleTranferModel","generateStyledImage","styledImage","snackbarMessage","styleNetPath","transferNetPath","donwloadModel","setValueAccessors","Skeleton","size","Snackbar","autoHideDuration","message","action","Fragment","backgroundColor","createMuiTheme","main","ThemeProvider","CssBaseline","primary","minHeight","justifyContent","button","Logo","Grid","container","item","xs","md","to","Card","raised","elvation","listStyle","App","basename","process","exact","path","component","ModeChooser","HomeLite","HomePro","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.10ce1bfd.chunk.js","sourcesContent":["import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  AppBar, IconButton, Toolbar, Tooltip,\n  Dialog, Typography, Slide\n} from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport LogoText from './logotext.svg';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'left',\n    verticalAlign: 'bottom'\n  },\n}));\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <div className={classes.title}>\n            <img src={LogoText} height='38px' alt='logo with text' className={classes.title} />\n          </div>\n\n          <Tooltip title=\"Github Repo Link\">\n            <IconButton\n              aria-label=\"github repo\"\n              aria-controls=\"menu-appbar\"\n              color=\"inherit\">\n              <a href=\"https://github.com/rahul-jha98/Artistify.ai\" rel=\"noopener noreferrer\" target='_blank' style={{ color: 'inherit', textDecoration: 'none', height: 24 }}>\n                <GitHubIcon />\n              </a>\n            </IconButton>\n          </Tooltip>\n\n          <Tooltip title=\"About\">\n            <IconButton\n              aria-label=\"about\"\n              aria-controls=\"menu-appbar\"\n              color=\"inherit\"\n              onClick={handleClickOpen}>\n              <InfoIcon />\n            </IconButton>\n          </Tooltip>\n        </Toolbar>\n      </AppBar>\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <Toolbar>\n          <Typography variant=\"h5\" style={{ textAlign: 'center' }} className={classes.title}>\n            <b>About Artistify.ai</b>\n          </Typography>\n          <IconButton edge=\"end\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n            <CloseIcon />\n          </IconButton>\n        </Toolbar>\n        <div className='container'>\n          <Typography variant='h5'>\n            How is this sorcery happening?\n            </Typography>\n          <Typography style={{ fontSize: '1rem' }} gutterBottom color='textSecondary'>\n            Neural Style Transfer is an algorithm that aims at recreating the given content image drawn in the style of another image known\n            as the style image. Now, with a photograph as content and a painting as style image we can see some wonderful art being generated.\n              <br />\n            <br />\n              Yet, the original implementation of Neural Style Transfer was slow taking many iterations over the image which took anywhere around\n              a few minutes to hours. But recently algorithms have been proposed to make this process much faster. We have reached a level where we\n              can apply it in real time between any two images. This arbitrary style transfer algorithm is what is running in the browser to make\n              the magic happens.\n            </Typography>\n          <br />\n          <br />\n          <Typography variant='h5'>\n            What's going on inside the model?\n            </Typography>\n          <Typography style={{ fontSize: '1rem' }} gutterBottom color='textSecondary'>\n            The complete model is divided in two parts : Style Extractor and Transformer Model.\n              <br />\n            <b>The Style Extractor</b> is responsible for extracting the style representation from the given image. Passing the content and style images\n              through this gives us their respective style feature representation. Then their weighted average is taken to incorporate varying degree of stylization\n              strength in the model.\n              <br />\n            <b>The Transformer</b> is responsible for generating the target image for a given style features. It is trained to generate images that\n              have similar content structure as content image but since it uses the syle image features when the model creates the image it is forced\n              to use the style features giving us the styled image as the output.\n              <br />\n              I have tried creating a basic implementation of arbitrary style transfer using AdaIN in a jupyter-notebook for understanding. It gives a rough idea\n              of the working so that you can get a clear idea.\n              <Typography style={{ fontSize: '1rem' }} gutterBottom color='primary'>\n              <a href=\"https://github.com/rahul-jha98/StyleTransfer_using_AdaIN\" rel=\"noopener noreferrer\" target='_blank' style={{ textDecoration: 'none', color: 'inherit' }}>The repo can be found here.</a>\n            </Typography>\n          </Typography>\n          <br />\n          <br />\n          <Typography variant='h5'>\n            Is my data safe?\n            </Typography>\n          <Typography style={{ fontSize: '1rem' }} gutterBottom color='textSecondary'>\n            If you have used the application you might have noticed the slight lag in UI when\n            the actual stylization is going on. Well, it happens because the whole model is running\n            right in your browser using your CPU for the task. Thus there is no need to send any image\n            to any server for processing and hence your data never leaves your system.\n            </Typography>\n          <br />\n          <br />\n          <Typography variant='h5'>\n            What is the difference between lite and normal mode?\n            </Typography>\n          <Typography style={{ fontSize: '1rem' }} gutterBottom color='textSecondary'>\n            While lite mode requires download of model of size around 10MB, normal mode downloads a model of size 45 MB.\n              The <b>normal mode</b> uses the original implementation from paper i.e. Inception-v3 model for style extraction and plain\n              convolution layers based transformer model. The <b>lite mode</b> on the other hand uses the light weight\n              MobileNet-v2 for extracting styles and depthwise separable convolution layer for the transformer network.\n            </Typography>\n\n        </div>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\n\nimport { withStyles} from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nconst CustomSlider = withStyles((theme) => ({\n    root: {\n      height: 6,\n      color: theme.palette.secondary.light,\n    },\n    thumb: {\n      height: 18,\n      width: 18,\n      marginTop: -6,\n      marginLeft: -9,\n    },\n    active: {},\n    valueLabel: {\n      left: 'calc(-50% + 4px)',\n    },\n    track: {\n      color: theme.palette.type==='dark' ? '#3f3f3f' : '#cfd8dc',\n      height: 6,\n      borderRadius: 4,\n    },\n    rail: {\n      color: theme.palette.type==='dark' ? '#3f3f3f' : '#cfd8dc',\n      height: 6,\n      borderRadius: 4,\n    }\n  }))(Slider);\nexport default (props) => {\n    return (\n        <CustomSlider \n            onChange={props.sliderChangeHandler} \n            {...props}\n            style={{marginTop: 2}}\n            value={props.value}/>\n    )\n}","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport HelpOutlineOutlinedIcon from '@material-ui/icons/HelpOutlineOutlined';\nimport Popover from '@material-ui/core/Popover';\n\nimport Slider from '../CustomSlider/CustomSlider';\n\nconst useStyles = (theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        width: '100%',\n        maxWidth: 600,\n        textAlign: 'left'\n    },\n    popover: {\n        pointerEvents: 'none',\n    },\n    paper: {\n        padding: theme.spacing(2),\n    },\n});\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\nclass ContentImageSelector extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            image: 'stata',\n            imageSrc: \"./content/stata.jpg\",\n            imgHeight: 250,\n            menulist: [\n                { value: 'webcam', name: \"Take a picture\" },\n                { value: 'upload', name: \"Upload a picture\" },\n                { value: 'chicago', name: 'Chicago' },\n                { value: 'diana', name: 'Diana' },\n                { value: 'golden_gate', name: 'Golden Gate' },\n                { value: 'stata', name: 'Stata' },\n                { value: 'statue_of_liberty', name: 'Statue of Liberty' },\n            ],\n            anchorEl: null,\n            modalOpen: false\n        }\n        this.uploadRef = React.createRef();\n        this.cameraRef = React.createRef();\n        this.canvasRef = React.createRef();\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n    }\n\n    componentWillUnmount = () => {\n        this.onModalCanceled();\n    }\n\n    onFileChange = (evt) => {\n        const file = evt.target.files[0];\n        const fileReader = new FileReader();\n        fileReader.onload = (e) => {\n            console.log(e.target.result);\n            console.log(file);\n            this.setState({ imageSrc: e.target.result, image: 'upload' });\n        }\n        fileReader.readAsDataURL(file);\n    }\n    handleMenu = (event) => {\n        if (event.target.value === 'webcam') {\n            this.setState({ modalOpen: true });\n            navigator.getUserMedia(\n                {\n                    video: true\n                },\n                (stream) => {\n                    this.cameraFeed = stream;\n                    this.cameraRef.current.srcObject = stream;\n                    this.cameraRef.current.play();\n                },\n                (err) => {\n                    console.error(err);\n                }\n            );\n            return;\n        } else if (event.target.value === 'upload') {\n            this.uploadRef.current.click();\n            return;\n        }\n        this.setState({ image: event.target.value, imageSrc: \"./content/\" + event.target.value + \".jpg\" });\n    }\n\n\n    onModalCanceled = () => {\n        if (!this.cameraFeed) {\n            this.setState({ modalOpen: false });\n            return;\n        }\n        this.cameraFeed.getTracks()[0].stop();\n        this.setState({ modalOpen: false });\n    }\n\n    onCameraCaptureClicked = () => {\n        if (!this.cameraFeed) {\n            this.setState({ modalOpen: false });\n            return;\n        }\n        const canvasContext = this.canvasRef.current.getContext('2d');\n        this.canvasRef.current.width = this.cameraRef.current.width;\n        this.canvasRef.current.height = this.cameraRef.current.height;\n        canvasContext.drawImage(this.cameraRef.current, 0, 0,\n            this.canvasRef.current.width, this.canvasRef.current.height);\n        const imageDataURL = this.canvasRef.current.toDataURL('image/jpg');\n        this.cameraFeed.getTracks()[0].stop();\n        this.setState({ modalOpen: false, imageSrc: imageDataURL, image: 'webcam' });\n    }\n    onSliderValueChange = (event, newValue) => {\n        this.setState({ imgHeight: newValue });\n    }\n\n    handlePopoverOpen = (event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    }\n\n    handlePopoverClose = () => {\n        this.setState({ anchorEl: null });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n\n        return (\n            <div className='selector-container'>\n                <canvas style={{ display: 'none' }} ref={this.canvasRef} />\n                <input ref={this.uploadRef} type=\"file\" id=\"file\" onChange={this.onFileChange} style={{ display: \"none\" }} accept=\"image/x-png,image/jpeg\" />\n                <img ref={this.props.refObject} className=\"center\" src={this.state.imageSrc} height={this.state.imgHeight} alt=\"content_img\" />\n                <br />\n                <div className={classes.formControl} style={{ marginBottom: '.1rem', display: 'inline-block', verticalAlign: 'middle' }}>\n                    <Typography style={{ display: 'inline-block', marginRight: '6px' }}>\n                        Content Image size\n                    </Typography>\n                    <HelpOutlineOutlinedIcon\n                        fontSize='small' color='action'\n                        style={{ marginBottom: -4 }}\n                        aria-owns={this.state.anchorEl ? 'mouse-over-popover' : undefined}\n                        aria-haspopup=\"true\"\n                        onMouseEnter={this.handlePopoverOpen}\n                        onMouseLeave={this.handlePopoverClose} />\n\n                    <Popover\n                        id=\"mouse-over-popover\"\n                        className={classes.popover}\n                        classes={{\n                            paper: classes.paper,\n                        }}\n                        open={this.state.anchorEl}\n                        anchorEl={this.state.anchorEl}\n                        anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                        }}\n                        transformOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                        }}\n                        onClose={this.state.handlePopoverClose}\n                        disableRestoreFocus>\n                        <Typography style={{ maxWidth: 200, textAlign: 'center' }}>A large content image leads to a more detailed output at the cost of increased processing time.</Typography>\n                    </Popover>\n                </div>\n\n\n\n                <Slider\n                    className={classes.formControl}\n                    sliderChangeHandler={this.onSliderValueChange}\n                    value={this.state.imgHeight}\n                    min={250}\n                    max={400}\n                    step={1}\n                    disabled={this.props.isDisabled} />\n                <FormControl variant=\"outlined\" className={classes.formControl} disabled={this.props.isDisabled}>\n                    <InputLabel id=\"content-label\" color='secondary'>Content Image</InputLabel>\n                    <Select\n                        labelId=\"content-label\"\n                        id=\"content-select\"\n                        value={this.state.image}\n                        onChange={this.handleMenu}\n                        label=\"Content Image\"\n                        color=\"secondary\">\n                        {this.state.menulist.map(option => (<MenuItem key={option.value} value={option.value}>{option.name}</MenuItem>))}\n                    </Select>\n                </FormControl>\n\n                <Dialog\n                    open={this.state.modalOpen}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    onClose={this.onModalCanceled}\n                    aria-labelledby=\"alert-dialog-slide-title\"\n                    aria-describedby=\"alert-dialog-slide-description\">\n                    <DialogTitle id=\"alert-dialog-slide-title\">Take a picture</DialogTitle>\n                    <DialogContent>\n                        <video ref={this.cameraRef} width=\"500\" height=\"400\"></video>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onModalCanceled} color=\"secondary\">\n                            Cancel\n                    </Button>\n                        <Button onClick={this.onCameraCaptureClicked} color=\"secondary\" variant=\"contained\">\n                            Capture\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(useStyles)(ContentImageSelector);","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Typography from '@material-ui/core/Typography';\nimport HelpOutlineOutlinedIcon from '@material-ui/icons/HelpOutlineOutlined';\nimport Popover from '@material-ui/core/Popover';\n\nimport Slider from '../CustomSlider/CustomSlider';\n\nconst useStyles = (theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        width: '100%',\n        maxWidth: 600,\n        textAlign: 'left'\n    },\n    popover: {\n        pointerEvents: 'none',\n    },\n    paper: {\n        padding: theme.spacing(2),\n    },\n});\n\nclass StyleImageSelector extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            image: 'seaport',\n            imageSrc: \"./style/seaport.jpg\",\n            imgHeight: 250,\n            menulist: [\n                { value: 'upload', name: \"Upload a picture\" },\n                { value: 'random', name: 'Random image from wikiart.org' },\n                { value: 'clouds', name: 'Clouds' },\n                { value: 'towers', name: 'Towers' },\n                { value: 'sketch', name: 'Sketch' },\n                { value: 'udnie', name: 'Udnie' },\n                { value: 'seaport', name: 'Seaport' },\n            ],\n            anchorEl: null\n        }\n        this.uploadRef = React.createRef();\n    }\n\n    onFileChange = (evt) => {\n        const file = evt.target.files[0];\n        const fileReader = new FileReader();\n        fileReader.onload = (e) => {\n            console.log(e.target.result);\n            console.log(file);\n            this.setState({ imageSrc: e.target.result, image: 'upload' });\n        }\n        fileReader.readAsDataURL(file);\n    }\n\n    handleMenu = (event) => {\n        if (event.target.value === 'random') {\n            return;\n        } else if (event.target.value === 'upload') {\n            this.uploadRef.current.click();\n            return;\n        }\n        this.setState({ image: event.target.value, imageSrc: \"./style/\" + event.target.value + \".jpg\" });\n    }\n\n    onSliderValueChange = (event, newValue) => {\n        this.setState({ imgHeight: newValue });\n    }\n\n    handlePopoverOpen = (event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    }\n\n    handlePopoverClose = () => {\n        this.setState({ anchorEl: null });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n\n        return (\n            <div className='selector-container'>\n                <input ref={this.uploadRef} type=\"file\" id=\"file\" onChange={this.onFileChange} style={{ display: \"none\" }} accept=\"image/x-png,image/jpeg\" />\n                <img ref={this.props.refObject} className=\"center\" src={this.state.imageSrc} height={this.state.imgHeight} alt=\"content_img\" />\n                <br />\n                <div className={classes.formControl} style={{ marginBottom: '.1rem', display: 'inline-block', verticalAlign: 'middle' }}>\n                    <Typography style={{ display: 'inline-block', marginRight: '6px' }}>\n                        Style Image size\n                    </Typography>\n                    <HelpOutlineOutlinedIcon\n                        fontSize='small' color='action'\n                        style={{ marginBottom: -4 }}\n                        aria-owns={this.state.anchorEl ? 'mouse-over-popover' : undefined}\n                        aria-haspopup=\"true\"\n                        onMouseEnter={this.handlePopoverOpen}\n                        onMouseLeave={this.handlePopoverClose} />\n\n                    <Popover\n                        id=\"mouse-over-popover\"\n                        className={classes.popover}\n                        classes={{\n                            paper: classes.paper,\n                        }}\n                        open={this.state.anchorEl}\n                        anchorEl={this.state.anchorEl}\n                        anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                        }}\n                        transformOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                        }}\n                        onClose={this.state.handlePopoverClose}\n                        disableRestoreFocus\n                    >\n                        <Typography style={{ maxWidth: 200, textAlign: 'center' }}>\n                            Changing the size of style image affects the texture seen by the network thus changing the pattern used in generated image.\n                            </Typography>\n                    </Popover>\n                </div>\n\n\n\n                <Slider\n                    className={classes.formControl}\n                    sliderChangeHandler={this.onSliderValueChange}\n                    value={this.state.imgHeight}\n                    min={100}\n                    max={400}\n                    step={1}\n                    disabled={this.props.isDisabled} />\n                <FormControl variant=\"outlined\" className={classes.formControl} disabled={this.props.isDisabled}>\n                    <InputLabel id=\"content-label\" color=\"secondary\">Style Image</InputLabel>\n                    <Select\n                        labelId=\"content-label\"\n                        id=\"content-select\"\n                        value={this.state.image}\n                        onChange={this.handleMenu}\n                        color=\"secondary\"\n                        label=\"Style Image\">\n                        {this.state.menulist.map(option => (<MenuItem key={option.value} value={option.value}>{option.name}</MenuItem>))}\n                    </Select>\n                </FormControl>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(useStyles)(StyleImageSelector);","import * as tf from '@tensorflow/tfjs';\ntf.ENV.set('WEBGL_PACK', false); \n\nclass StyleTransferModel {\n    constructor(path_style_network, path_transformer_network) {\n        this.path_style_network = path_style_network;\n        this.path_transformer_network = path_transformer_network;\n    }\n\n    donwloadModel(onDownloadSuccessful, onDownloadFailed) {\n        Promise.all([\n            this.loadModelFromPath(this.path_style_network),\n            this.loadModelFromPath(this.path_transformer_network)\n        ]).then(([styleNet, transformerNet]) => {\n            this.styleNetwork = styleNet;\n            this.transformerNetwork = transformerNet;\n            onDownloadSuccessful();\n        }).catch(err => {\n            onDownloadFailed();\n        })\n    }\n\n    async loadModelFromPath(path_to_model) {\n        return await tf.loadGraphModel(path_to_model);\n    }\n\n    setValueAccessors(contentRef, styleRef, outputRef) {\n        this.contentRef = contentRef;\n        this.styleRef = styleRef;\n        this.outputRef = outputRef;\n    }\n\n    async generateStyledImage(style_ratio, onImageGenerated, onError) {\n        await tf.nextFrame();\n        await tf.nextFrame();\n        await tf.nextFrame();\n        try {\n            let features = await tf.tidy(() => {\n                return this.styleNetwork.predict(\n                    tf.browser.fromPixels(this.styleRef.current).toFloat().div(tf.scalar(255)).expandDims());\n            });\n\n            if (style_ratio !== 1.0) {\n                const content_features = await tf.tidy(() => {\n                    return this.styleNetwork.predict(tf.browser.fromPixels(this.contentRef.current).toFloat().div(tf.scalar(255)).expandDims());\n                });\n                const style_features = features;\n\n                features = await tf.tidy(() => {\n                    const styleFeaturesScaled = style_features.mul(tf.scalar(style_ratio));\n                    const contentFeaturesScaled = content_features.mul(tf.scalar(1.0 - style_ratio));\n                    return styleFeaturesScaled.addStrict(contentFeaturesScaled);\n                });\n\n                content_features.dispose();\n                style_features.dispose();\n            }\n\n            const stylizedImage = await tf.tidy(() => {\n                return this.transformerNetwork.predict(\n                    [tf.browser.fromPixels(this.contentRef.current).toFloat().div(tf.scalar(255)).expandDims(),\n                        features]).squeeze();\n            })\n            await tf.nextFrame();\n            onImageGenerated(this.contentRef.current.src);\n            await tf.browser.toPixels(stylizedImage, this.outputRef.current);\n            features.dispose(); \n            stylizedImage.dispose();\n        } catch {\n            onError();\n        }\n\n    }\n}\n\nexport default StyleTransferModel;","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport HelpOutlineOutlinedIcon from '@material-ui/icons/HelpOutlineOutlined';\nimport Popover from '@material-ui/core/Popover';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport ContentImageSelector from './ImageSelector/ContentImageSelector';\nimport StyleImageSelector from './ImageSelector/StyleImageSelector';\nimport Slider from './CustomSlider/CustomSlider';\nimport './StyleTransfer.css';\n\nimport StyleTransferModel from '../../tensorflowjs/StyleTransferModel';\n\nconst useStyles = (theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        marginLeft: 0,\n        marginRight: 0,\n        width: '100%',\n        maxWidth: 600,\n        textAlign: 'left'\n    },\n    popover: {\n        pointerEvents: 'none',\n    },\n    paper: {\n        padding: theme.spacing(2),\n    },\n});\n\nclass StyleTransferApp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isDisabled: false,\n            strength: 1,\n            anchorEl: null,\n            contentSrc: null,\n            height: 300,\n            loading: -2,\n        }\n        this.contentRef = React.createRef();\n        this.styleRef = React.createRef();\n        this.outputRef = React.createRef();\n\n        this.styleTranferModel = new StyleTransferModel(\n            this.props.styleNetPath,\n            this.props.transferNetPath);\n\n        this.styleTranferModel.donwloadModel(\n            () => {\n                this.setState({ loading: -1 });\n            },\n            () => {\n                this.setState({ snackbarMessage: \"Couldn't Donwload Model\" })\n            }\n        )\n        this.styleTranferModel.setValueAccessors(this.contentRef, this.styleRef, this.outputRef);\n    }\n\n    onSliderValueChange = (event, newValue) => {\n        this.setState({ strength: newValue });\n    }\n\n    handlePopoverOpen = (event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    }\n\n    handlePopoverClose = () => {\n        this.setState({ anchorEl: null });\n    }\n\n    onBeginStylization = () => {\n        this.setState({ isDisabled: true });\n        this.resetAndBegin();\n\n    }\n\n    refreshPage = () => {\n        window.location.reload();\n    }\n    resetAndBegin = () => {\n        this.setState({\n            contentSrc: null,\n            loading: 0,\n            stepper: 0,\n            height: this.contentRef.current.height,\n            width: this.contentRef.current.width\n        }, () => {\n            this.styleTranferModel\n                .generateStyledImage(this.state.strength,\n                    (styledImage) => {\n                        this.setState({\n                            stepper: -1,\n                            contentSrc: styledImage,\n                            loading: 1,\n                            isDisabled: false\n                        });\n                    },\n                    () => {\n                        this.setState({\n                            snackbarMessage: 'Error while generating image',\n                            isDisabled: false\n                        })\n                    });\n\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className='container expanded-content'>\n                <div className='inputs'>\n                    <ContentImageSelector isDisabled={this.state.isDisabled} refObject={this.contentRef} />\n                    <StyleImageSelector isDisabled={this.state.isDisabled} refObject={this.styleRef} />\n                </div>\n                <br />\n                <div className='outputs'>\n                    <div className='selector-container'>\n                        {this.state.loading > -1 ?\n                            this.state.loading !== 0 ?\n                                <canvas ref={this.outputRef} className=\"center margin\" height={this.state.height} alt=\"content_img\" /> :\n                                <Skeleton className=\"center margin\" variant='rect' width={this.state.width} height={this.state.height} />\n                            : null}\n                        <div className={classes.formControl} style={{ marginBottom: '.1rem', display: 'inline-block', verticalAlign: 'middle' }}>\n\n                            <Typography style={{ display: 'inline-block', marginRight: '6px', marginLeft: 5 }}>\n                                Stylization Strength\n                            </Typography>\n                            <HelpOutlineOutlinedIcon\n                                fontSize='small' color='action'\n                                style={{ marginBottom: -4 }}\n                                aria-owns={this.state.anchorEl ? 'mouse-over-popover' : undefined}\n                                aria-haspopup=\"true\"\n                                onMouseEnter={this.handlePopoverOpen}\n                                onMouseLeave={this.handlePopoverClose} />\n\n                            <Popover\n                                id=\"mouse-over-popover\"\n                                className={classes.popover}\n                                classes={{\n                                    paper: classes.paper,\n                                }}\n                                open={this.state.anchorEl}\n                                anchorEl={this.state.anchorEl}\n                                anchorOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'center',\n                                }}\n                                transformOrigin={{\n                                    vertical: 'bottom',\n                                    horizontal: 'center',\n                                }}\n                                onClose={this.state.handlePopoverClose}\n                                disableRestoreFocus\n                            >\n                                <Typography style={{ maxWidth: 200, textAlign: 'center' }}>\n                                    Stylization strength is the degree of stylization that is applied. Going left inclines the output closer to the content image while going right deviates it more towards the style image.\n                                    </Typography>\n                            </Popover>\n\n                            <br />\n                            <Slider\n                                className={classes.formControl}\n                                sliderChangeHandler={this.onSliderValueChange}\n                                value={this.state.strength}\n                                min={0}\n                                max={1}\n                                step={.01}\n                                disabled={this.state.isDisabled} />\n                            <br />\n                            <Button className={classes.formControl}\n                                variant=\"contained\"\n                                size=\"large\"\n                                color=\"secondary\"\n                                onClick={this.onBeginStylization}\n                                disabled={this.state.isDisabled || this.state.loading === -2}>\n                                {this.state.loading === -2 ? 'Downloading Model' : 'Begin Stylization'}\n                            </Button>\n                            <br />\n                        </div>\n                    </div>\n                </div>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    open={this.state.snackbarMessage}\n                    autoHideDuration={3000}\n                    onClose={() => this.setState({ snackbarMessage: '' })}\n                    message={this.state.snackbarMessage}\n                    action={\n                        <React.Fragment>\n                            <Button color=\"secondary\" size=\"small\" onClick={this.refreshPage}>\n                                Reload\n                            </Button>\n                        </React.Fragment>\n                    }\n                />\n            </div>\n\n        )\n    }\n}\n\nexport default withStyles(useStyles)(StyleTransferApp);","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport './Footer.css';\n\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.type === 'dark' ? '#424242' : '#eeeeee',\n        padding: '32px 8px'\n    }\n}));\nexport default (props) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <div className='container'>\n                <Typography color='textSecondary'>\n                    Made with <FavoriteIcon fontSize='small' style={{ color: '#b71c1c', marginBottom: '-3px' }} /> by <b>Rahul Jha</b>\n                </Typography>\n\n                <a href=\"https://github.com/rahul-jha98\" rel=\"noopener noreferrer\" target='_blank' style={{ textDecoration: 'none' }}>\n                    <GitHubIcon className='fa' color='action' fontSize='small' />\n                </a>\n                <a href=\"https://www.linkedin.com/in/rahul-jha-84a204178/\" rel=\"noopener noreferrer\" target='_blank' style={{ textDecoration: 'none' }}>\n                    <LinkedInIcon className='fa' color='action' fontSize='small' />\n                </a>\n\n                {/* <TwitterIcon className='fa' fontSize='small'/> */}\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n\nimport AppBar from '../AppBar/AppBar';\nimport StyleTranferApp from '../StyleTransferApp';\nimport Footer from '../Footer/Footer';\n\nconst theme = createMuiTheme({\n    palette: {\n      secondary: {\n        main: '#0091ea',\n      },\n    },\n  });\n\nexport default (props) => {  \n    return (\n        <ThemeProvider theme={theme}>\n            <React.Fragment>\n                <CssBaseline/>\n                <AppBar />\n                <div className='content-area'>\n                    <StyleTranferApp styleNetPath='./models/lite/style/model.json' transferNetPath='./models/lite/transformer/model.json'/>\n                    <Footer />\n                </div>\n            </React.Fragment>\n        </ThemeProvider>        \n    )\n}","import React from 'react';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport AppBar from '../AppBar/AppBar';\nimport StyleTranferApp from '../StyleTransferApp';\nimport Footer from '../Footer/Footer';\n\nconst theme = createMuiTheme({\n    palette: {\n      type: 'dark',\n      primary: {\n          main: '#5768c9'\n      },\n      secondary: {\n        main: '#0091ea',\n      },\n    },\n  });\n\nexport default (props) => {  \n    return (\n        <ThemeProvider theme={theme}>\n            <React.Fragment>\n                <CssBaseline/>\n                <AppBar />\n                <div className='content-area'>\n                    <StyleTranferApp styleNetPath='./models/pro/style/model.json' transferNetPath='./models/lite/transformer/model.json'/>\n                    <Footer />\n                </div>\n            </React.Fragment>\n        </ThemeProvider>        \n    )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport Logo from './Logo.png';\nimport './ModeChooser.css';\nimport Footer from '../Footer/Footer';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        padding: '16px 0px',\n        minHeight: '50vh',\n        height: '100%',\n        justifyContent: 'middle'\n    },\n    paper: {\n        padding: theme.spacing(1),\n        borderRadius: 10\n\n    },\n    button: {\n        margin: '20px 0'\n    }\n}));\n\nexport default (props) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <div className='grid'>\n                <div className='title'>\n                    <img className='logoimg' src={Logo} alt='logo' />\n                </div>\n                <div className={classes.root}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={6}>\n                            <Link to='/lite' style={{ textDecoration: 'none' }}>\n                                <Card raised elvation={6} className={classes.paper}>\n                                    <Typography variant='h5' gutterBottom>\n                                        Lite Mode\n                                </Typography>\n                                    <Typography variant='body1' color='textSecondary'>\n                                        <ul style={{ listStyle: 'none' }}>\n                                            <li>Use lightweight model (downlaod size 10MB)</li>\n                                            <li>Slightly less detailed output compared to pro mode</li>\n                                            <li>Faster output generation time</li>\n                                            <li>Much less intensive compute heavy</li>\n                                        </ul>\n                                    </Typography>\n                                    <Button className={classes.button} variant=\"outlined\" color=\"primary\">\n                                        Go To Lite Mode\n                                </Button>\n                                </Card>\n                            </Link>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Link to='/pro' style={{ textDecoration: 'none' }}>\n                                <Card raised elvation={6} className={classes.paper}>\n                                    <Typography variant='h5' gutterBottom>\n                                        Pro Mode\n                                </Typography>\n                                    <Typography variant='body1' color='textSecondary'>\n                                        <ul style={{ listStyle: 'none' }}>\n                                            <li>Use superior model (download size 40MB)</li>\n                                            <li>Much more refined output for given style image</li>\n                                            <li>Slower output generation</li>\n                                            <li>Quite intensive task for CPU</li>\n                                        </ul>\n                                    </Typography>\n                                    <Button className={classes.button} variant=\"outlined\" color=\"primary\">\n                                        Go To Pro Mode\n                                </Button>\n                                </Card>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </div>\n                <Footer />\n            </div>\n        </React.Fragment>\n    )\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport HomeLite from './components/Home/HomeLite';\nimport HomePro from './components/Home/HomePro';\nimport ModeChooser from './components/ModeChooser/ModeChooser';\n\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={ModeChooser} />\n          <Route path=\"/lite\" component={HomeLite} />\n          <Route path=\"/pro\" component={HomePro} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/logotext.2fee81d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/Logo.1ba2315b.png\";"],"sourceRoot":""}